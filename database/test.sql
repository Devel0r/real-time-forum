BEGIN TRANSACTION;

CREATE TABLE IF NOT EXISTS "USERS" (
    "userID"    INTEGER PRIMARY KEY AUTOINCREMENT,
    "userName"    TEXT,
    "userPwd"    TEXT,
    "userAge"    INTEGER NOT NULL,
    "userToken"    TEXT DEFAULT NULL,
    "firstName"    TEXT NOT NULL,
    "lastName"    TEXT NOT NULL,
    "userGender"    TEXT NOT NULL,
    "userCreated" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "COMMENTS" (
    "commentID"    INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "originID" INTEGER NOT NULL REFERENCES POSTS(PostID)
    "commentOriginID" INTEGER NOT NULL REFERENCES USERS(userID),
    "commentUser"    TEXT NOT NULL,
    "commentText"    TEXT NOT NULL,
    "commentCreated" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "commentUpdated" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "POSTS" (
    "PostID"    INTEGER PRIMARY KEY NOT NULL AUTOINCREMENT
    "PostTitle"    VARCHAR(255) NOT NULL,
    "PostText"    TEXT,
    "postCreated" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "postUpdated" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "postTagID" INTEGER NOT NULL REFERENCES TAGS(tagID),
    "opID" INTEGER NOT NULL REFERENCES USERS(userID) 
);

CREATE TABLE IF NOT EXISTS "TAGS" (
    "tagID" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
    "tagTitle" VARCHAR(255) NOT NULL,
    -- Do we need the timestamp for the categories? Maybe for custom ones perhaps.
    "tagCreation" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "tagUpdated" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS sessions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    useridentifier INTEGER NOT NULL REFERENCES USERS(userID), 
    expired_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP 
);
COMMIT;